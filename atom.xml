<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhinian_Blog</title>
  <subtitle>初行翼翼, 欲展翅飞翔</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.zhinian.info/"/>
  <updated>2016-12-16T11:58:21.000Z</updated>
  <id>http://blog.zhinian.info/</id>
  
  <author>
    <name>鹏程</name>
    <email>1185367347@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>这个blog 你需要知道的</title>
    <link href="http://blog.zhinian.info/2016/12/16/blog/"/>
    <id>http://blog.zhinian.info/2016/12/16/blog/</id>
    <published>2016-12-16T11:32:14.000Z</published>
    <updated>2016-12-16T11:58:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到这里-😊"><a href="#欢迎来到这里-😊" class="headerlink" title="欢迎来到这里 😊"></a>欢迎来到这里 😊</h1><h2 id="此处是何方神圣"><a href="#此处是何方神圣" class="headerlink" title="此处是何方神圣?"></a>此处是何方神圣?</h2><p>&emsp;&emsp;╮(╯▽╰)╭   此处只是一个前端小白自学之路的一个记录之地.  于2016年12月开启. 有一朝没一夕的更新着, 有着自己在FreeCodeCamp上学习的笔记,  有着自己收集的干货,  有着自己写的一些浅显易懂的教程.   还有一些随笔随记…</p>
<a id="more"></a>
<h3 id="关于Freecodecamp"><a href="#关于Freecodecamp" class="headerlink" title="关于Freecodecamp"></a>关于Freecodecamp</h3><p>  简称<strong>FCC</strong>, 官方英文网址: <a href="https://www.freecodecamp.com/" target="_blank" rel="external">https://www.freecodecamp.com/</a> 官方中文网址: <a href="https://www.freecodecamp.cn/" target="_blank" rel="external">https://www.freecodecamp.cn/</a> 是一个闯关模式, 从基础开始学习前端的网站.  <a href="http://blog.zhinian.info/2016/12/04/Fcc/">详情点击这里</a>.  Fcc须知.</p>
<h3 id="关于干货"><a href="#关于干货" class="headerlink" title="关于干货"></a>关于干货</h3><p>  正在编译中…..</p>
<h3 id="关于教程"><a href="#关于教程" class="headerlink" title="关于教程"></a>关于教程</h3><p>  我本着读者零基础看教程的心态,  尽量给每个步骤都配图, 配文字, 并且把我能知道的坑, 简单明了的说一遍, 然后你可以选择踩或不踩.</p>
<h1 id="待续…"><a href="#待续…" class="headerlink" title="待续…."></a>待续….</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;欢迎来到这里-😊&quot;&gt;&lt;a href=&quot;#欢迎来到这里-😊&quot; class=&quot;headerlink&quot; title=&quot;欢迎来到这里 😊&quot;&gt;&lt;/a&gt;欢迎来到这里 😊&lt;/h1&gt;&lt;h2 id=&quot;此处是何方神圣&quot;&gt;&lt;a href=&quot;#此处是何方神圣&quot; class=&quot;headerlink&quot; title=&quot;此处是何方神圣?&quot;&gt;&lt;/a&gt;此处是何方神圣?&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;╮(╯▽╰)╭   此处只是一个前端小白自学之路的一个记录之地.  于2016年12月开启. 有一朝没一夕的更新着, 有着自己在FreeCodeCamp上学习的笔记,  有着自己收集的干货,  有着自己写的一些浅显易懂的教程.   还有一些随笔随记…&lt;/p&gt;
    
    </summary>
    
      <category term="Known" scheme="http://blog.zhinian.info/categories/Known/"/>
    
    
      <category term="top" scheme="http://blog.zhinian.info/tags/top/"/>
    
  </entry>
  
  <entry>
    <title>一次晚归夜宿与早起日出</title>
    <link href="http://blog.zhinian.info/2016/12/12/night/"/>
    <id>http://blog.zhinian.info/2016/12/12/night/</id>
    <published>2016-12-12T02:52:07.000Z</published>
    <updated>2016-12-12T03:11:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;出了地铁站，时间已是23：23分，回到宿舍的14分钟被缩减一半。也是好饿，又闻到周围飘来的饭香，心一横，翻个墙回去吧！</p>
<blockquote>
<p>下午去练车，科目三，九点的时候教练说去看考场，与另外两个学员拼车去了。地点实在是感人，位处深圳湾旁边。到了地方就已经近九点四十了，看考场，ok后到地铁站时候，就已经十点四十了。</p>
</blockquote>
<p>宿舍， 翻墙这两个名词联系起来检索，我能想到的就是我班里一个80+kg的同学，他说过的一句话：“<strong>翻墙啊~  如履平地</strong>”     顿时被我铭记在心。<br><a id="more"></a><br> 宵夜麻辣烫啊，夜里搭配。</p>
<p>&emsp;&emsp;吃饱了，走回宿舍楼下，十二点十几分，本欲“如履平地”，却发现宿管还没走，这就尴尬了。没事，我等。<br>&emsp;&emsp;&emsp;&emsp;&emsp;十二点四十，我等。<br>&emsp;&emsp;&emsp;&emsp;&emsp;一点十分，我等。</p>
<p>&emsp;&emsp;此时的状态，好困，好渴，又有冷风吹。让室友送下来一杯热水，一口气喝完，给个枕头我能在长椅上睡着。就不管蚊子咬了<br>我想宿管也是蛮拼的，一点半总要走了吧，毕竟守了两个小时了。</p>
<p>一点半，我等。<br>等个啥…    一个朋友说，<strong><em>这宿管他夜班！夜班！班！</em></strong><br>感情我刚刚就是自演自作。嗯……</p>
<p>&emsp;朋友支个招，教学楼有教师休息室，门不关，里面有床，下楼顺便把身份证也给我了……</p>
<p>我看了一眼两个聊天聊的特别嗨的宿管，面无表情的走了，当然，他们是没看见我的。</p>
<p>&emsp;&emsp;北5教室休息室，门关着，换个姿势再开一次，嗯还是关着，刚走两步，里面出来人了，被告知已经有人了。      Biu biu biu<br>这时特么灵机一动，学校搞对称，南边应该也有，嗯果然有，但全是椅子，凑合着吧~   毕竟两点了。毕竟穷，没一百五睡一晚。毕竟不喜欢烟味，没去网吧。当然，那是因为有这个休息室。</p>
<p>夜里辗转反侧好几次，夜里好像打死蚊子一只，然而这一只 只是一群蚊子里面的一个罢了。</p>
<p>六点半闹钟，起来，离开教学楼，刚好看到日出。    真的挺美的。<br>也是因为早起的一次日出，促成了一口气写完这个晚归夜宿与早起日出的经历。</p>
<p>&emsp;&emsp;生活应当多彩, 就像是   你所看到的美好的部分和失落的世界.  交替循环. </p>
<p>&emsp;&emsp;而且,  在你越是忽视的时候,  越是令人惊讶.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;出了地铁站，时间已是23：23分，回到宿舍的14分钟被缩减一半。也是好饿，又闻到周围飘来的饭香，心一横，翻个墙回去吧！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下午去练车，科目三，九点的时候教练说去看考场，与另外两个学员拼车去了。地点实在是感人，位处深圳湾旁边。到了地方就已经近九点四十了，看考场，ok后到地铁站时候，就已经十点四十了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;宿舍， 翻墙这两个名词联系起来检索，我能想到的就是我班里一个80+kg的同学，他说过的一句话：“&lt;strong&gt;翻墙啊~  如履平地&lt;/strong&gt;”     顿时被我铭记在心。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://blog.zhinian.info/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="生活" scheme="http://blog.zhinian.info/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Github 的注册与使用教程以及github page (二)</title>
    <link href="http://blog.zhinian.info/2016/12/08/Github-2/"/>
    <id>http://blog.zhinian.info/2016/12/08/Github-2/</id>
    <published>2016-12-08T14:47:16.000Z</published>
    <updated>2016-12-16T13:24:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>须知: </p>
<ol>
<li>本文图片较多, 所以我用了<a href="https://isux.tencent.com/introduction-of-webp.html" target="_blank" rel="external">webp格式</a>的图来加载, 以防止出现网速不好者, 要等待一会~ 还有就是图片作用就是让你确认你的界面应该是怎么样的.  我也有文字说明的. </li>
<li>(新加)   难过,  移动端暂时不支持webp格式的图片,  我在找到解决的方法之前, 还是先用jpg格式的.</li>
<li>本文是从小白开始的教程, 大牛勿喷. 再说. 这是我第一次写, 难免过于幼稚.  体谅哈~</li>
<li>左侧有目录, 可以跳转查看.  </li>
</ol>
</blockquote>
<h1 id="使用Github来托管你的代码"><a href="#使用Github来托管你的代码" class="headerlink" title="使用Github来托管你的代码"></a>使用Github来托管你的代码</h1><a id="more"></a>
<blockquote>
<p><strong>第一部分</strong> <a href="http://blog.zhinian.info/2016/12/08/Github-1/">认识Github和Github Page (一)</a></p>
<p>  在第一部分中,  我简单的写了Github的注册, 建仓库,  初次使用Github page. 还是用的网页上的<strong>create new file</strong> 在实际生产中, 我们肯定不可能是那样的写文件吧, 所以. 这个博文就是教你如何上传代码文件的</p>
</blockquote>
<h1 id="Github-的客户端使用"><a href="#Github-的客户端使用" class="headerlink" title="Github 的客户端使用"></a>Github 的客户端使用</h1><p>  当今盛行的代码托管服务平台.  而我们作为一个程序员, 岂有弃之不用之理~  好绕哈哈.    下面我就直接进入主题  客户端的使用.  分别有Mac端 和 windows端 的使用.</p>
<blockquote>
<p>客户端是简单的操作, 适合新手. </p>
</blockquote>
<h2 id="Mac客户端下载与使用"><a href="#Mac客户端下载与使用" class="headerlink" title="Mac客户端下载与使用"></a>Mac客户端下载与使用</h2><ul>
<li>官网下载地址: <a href="https://desktop.github.com/" target="_blank" rel="external">https://desktop.github.com/</a></li>
<li>如果网速慢, 可以在我的网盘下载. 链接: <a href="http://pan.baidu.com/s/1i4B4tzZ" target="_blank" rel="external">http://pan.baidu.com/s/1i4B4tzZ</a> 密码: gjpy</li>
</ul>
<h3 id="安装并登录客户端"><a href="#安装并登录客户端" class="headerlink" title="安装并登录客户端"></a>安装并登录客户端</h3><ul>
<li>快捷键 <code>command</code> + <code>,</code> 打开客户端的设置.  </li>
<li>点击 <strong>Accounts</strong>  然后  sign in 你的Github账号.</li>
</ul>
<h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><ul>
<li>登陆成功后, 在客户端的左上角点击 <strong><em>+</em></strong>  图标, 在弹出来的框框中,  有三个选项: Add  Create  Clone,  这里我们需要点击Clone. </li>
<li>这时会出来你Github账号上,  所有的仓库.  你需要clone哪个, 就点击仓库名字, 右下角的按钮就亮了.   click it</li>
<li>弹出clone选项, 你选择好文件夹就可以了.</li>
</ul>
<h3 id="写代码咯"><a href="#写代码咯" class="headerlink" title="写代码咯"></a>写代码咯</h3><p>  你想托管在Github平台的代码放在你克隆到本地的仓库下面就好了,  然后接着下一步, push你的代码吧.</p>
<blockquote>
<p>这里</p>
</blockquote>
<h3 id="提交代码到Github"><a href="#提交代码到Github" class="headerlink" title="提交代码到Github"></a>提交代码到Github</h3><ol>
<li><p>打开客户端.  点击左侧你要同步的仓库</p>
</li>
<li><p>当你本地的代码与网页上的相比, 有变动的时候, 会显示有多少个 changes . </p>
</li>
<li><p>在changes下,  在你的头像旁边, 有一个输入框, summary(描述)  输入你为这一次提交的说明.       </p>
<ul>
<li>这个是必须的</li>
<li>你的说明, 如果出现空格,  请用 <strong>“”</strong> 把说明包含起来</li>
</ul>
<p>​</p>
</li>
<li><p>输入完上述的summary后,  下面的 <code>Commit to master</code> 就可以点击了     click it</p>
</li>
<li><p>这时候你已经完成了90%了,  最后一步就是点击右上角黑色框中的  Sync  . 等待上传成功吧.</p>
</li>
<li><p>去Github官网上,  登录你的账号, 查看你的代码吧.  啊哈~ </p>
</li>
</ol>
<h2 id="Windows客户端下载与使用"><a href="#Windows客户端下载与使用" class="headerlink" title="Windows客户端下载与使用"></a>Windows客户端下载与使用</h2><ul>
<li>官网下载地址: <a href="https://desktop.github.com/" target="_blank" rel="external">https://desktop.github.com/</a></li>
<li>如果网速慢, 可以在我的网盘下载.  链接: </li>
</ul>
<h1 id="命令行的使用-Git"><a href="#命令行的使用-Git" class="headerlink" title="命令行的使用  Git"></a>命令行的使用  Git</h1><blockquote>
<p>命令行是轻松方便的一个方法,  它舍去了鼠标的点来点去, 舍去了UI界面,  用最简单的一行行命令轻松完成clone  commit  push 等等, 将你的代码从本地托管到Github上</p>
</blockquote>
<h2 id="Mac下的git命令行"><a href="#Mac下的git命令行" class="headerlink" title="Mac下的git命令行"></a>Mac下的git命令行</h2><h3 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h3><h2 id="Windows下的git命令行"><a href="#Windows下的git命令行" class="headerlink" title="Windows下的git命令行"></a>Windows下的git命令行</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;须知: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本文图片较多, 所以我用了&lt;a href=&quot;https://isux.tencent.com/introduction-of-webp.html&quot;&gt;webp格式&lt;/a&gt;的图来加载, 以防止出现网速不好者, 要等待一会~ 还有就是图片作用就是让你确认你的界面应该是怎么样的.  我也有文字说明的. &lt;/li&gt;
&lt;li&gt;(新加)   难过,  移动端暂时不支持webp格式的图片,  我在找到解决的方法之前, 还是先用jpg格式的.&lt;/li&gt;
&lt;li&gt;本文是从小白开始的教程, 大牛勿喷. 再说. 这是我第一次写, 难免过于幼稚.  体谅哈~&lt;/li&gt;
&lt;li&gt;左侧有目录, 可以跳转查看.  &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;使用Github来托管你的代码&quot;&gt;&lt;a href=&quot;#使用Github来托管你的代码&quot; class=&quot;headerlink&quot; title=&quot;使用Github来托管你的代码&quot;&gt;&lt;/a&gt;使用Github来托管你的代码&lt;/h1&gt;
    
    </summary>
    
      <category term="教程" scheme="http://blog.zhinian.info/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="github" scheme="http://blog.zhinian.info/tags/github/"/>
    
      <category term="github page" scheme="http://blog.zhinian.info/tags/github-page/"/>
    
  </entry>
  
  <entry>
    <title>Github 的注册与使用教程以及github page (一)</title>
    <link href="http://blog.zhinian.info/2016/12/08/Github-1/"/>
    <id>http://blog.zhinian.info/2016/12/08/Github-1/</id>
    <published>2016-12-08T14:47:16.000Z</published>
    <updated>2016-12-16T12:20:47.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>须知: </p>
<ol>
<li>本文图片较多, 所以我用了<a href="https://isux.tencent.com/introduction-of-webp.html" target="_blank" rel="external">webp格式</a>的图来加载, 以防止出现网速不好者, 要等待一会~ 还有就是图片作用就是让你确认你的界面应该是怎么样的.  我也有文字说明的. </li>
<li>(新加)   难过,  移动端暂时不支持webp格式的图片,  我在找到解决的方法之前, 还是先用jpg格式的.</li>
<li>本文是从小白开始的教程, 大牛勿喷. 再说. 这是我第一次写, 难免过于幼稚.  体谅哈~</li>
<li>左侧有目录, 可以跳转查看.  </li>
</ol>
</blockquote>
<h1 id="认识Github和Github-Page"><a href="#认识Github和Github-Page" class="headerlink" title="认识Github和Github Page"></a>认识Github和Github Page</h1><a id="more"></a>
<blockquote>
<p>啰嗦的第一段, 已经了解的可以左侧目录栏跳过啦~</p>
</blockquote>
<ol>
<li><p><strong>GitHub</strong>是一个通过<a href="https://zh.wikipedia.org/wiki/Git" target="_blank" rel="external">Git</a>进行<a href="https://zh.wikipedia.org/wiki/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6" target="_blank" rel="external">版本控制</a>的软件源代码托管服务，由GitHub公司开发并运营. </p>
</li>
<li><p>截止到2015年，<strong>GitHub</strong>已经有超过九百万注册用户和2110万代码库。事实上已经成为了世界上最大的代码存放网站和开源社区。</p>
</li>
<li><p><strong>GitHub</strong>同时提供付费账户和免费账户。这两种账户都可以创建公开的代码仓库，但是付费账户还可以创建私有的代码仓库。</p>
</li>
<li><p><strong>Github</strong>还有一个<a href="https://pages.github.com/" target="_blank" rel="external">github page</a>功能.   从而建立一个属于你自己的网站.   并且,  它是免费又快速的.</p>
</li>
<li><p><strong>Github Page</strong>还可以自定义域名,  从而让你更加的与众不同. 出色于你的努力. </p>
</li>
<li><p>Are you ready?</p>
</li>
</ol>
<h1 id="Github-注册"><a href="#Github-注册" class="headerlink" title="Github 注册"></a>Github 注册</h1><blockquote>
<p>首先, 我们应该打开github<a href="https://github.com/" target="_blank" rel="external">官网</a>袄~  <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a>   当然, 已经注册过的   可以跳过往下看~</p>
</blockquote>
<h4 id="注册页面"><a href="#注册页面" class="headerlink" title="注册页面"></a>注册页面</h4><p>网址:  <a href="https://github.com/join?source=header" target="_blank" rel="external">https://github.com/join?source=header</a></p>
<h5 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h5><ul>
<li>填写用户名, 注册邮箱(邮箱要正确,且你要知道密码袄, 因为后面需要验证), 填写登录密码.</li>
</ul>
<p><img src="http://blog.zhinian.info/imgs/github_imgs/github_img_1_s.jpg" alt="Github_img_1"></p>
<h5 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h5><ul>
<li>选择你的套餐</li>
</ul>
<p><img src="http://blog.zhinian.info/imgs/github_imgs/github_img_2_s.jpg" alt="Github_img_2"></p>
<h5 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h5><ul>
<li>填写你的信息(这个是可选的)  你也可以跳过.</li>
</ul>
<p><img src="http://blog.zhinian.info/imgs/github_imgs/github_img_3_s.jpg" alt="Github_img_3"></p>
<h4 id="验证邮箱"><a href="#验证邮箱" class="headerlink" title="验证邮箱"></a>验证邮箱</h4><ul>
<li>接着上一步, 第三步ok后, 点击 <strong>start a project</strong>.  它会让你验证邮箱. 然后发送一个邮件到你的邮箱里, 你去邮箱验证就好啦~</li>
<li>后期你还可以在右上角你的头像那里点击,  弹出的下拉菜单倒数第二个  setting 菜单. 这个是设置你的github功能的,里面你还可以添加邮箱啦, 更改密码啦, 更改信息啦.</li>
</ul>
<h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><h5 id="第一步-1"><a href="#第一步-1" class="headerlink" title="第一步"></a>第一步</h5><p>点击右上角的 <strong>+</strong>  , 在弹出的下拉菜单里, 点击 new repository .   <strong>仓库的名字</strong>一定要看清,填好袄~   还有, 有个需要<code>打钩的地方</code>, 也顺手打了吧, 这样会方便以后,  尽管后面你还可以自己创建. </p>
<p><img src="http://blog.zhinian.info/imgs/github_imgs/github_img_4_s.jpg" alt="Github_img_4"></p>
<p>我这里为了下面的演示Pages  所以就创建了一个.github.io格式的仓库. </p>
<h5 id="第二步-可选"><a href="#第二步-可选" class="headerlink" title="第二步 (可选)"></a>第二步 (可选)</h5><p>体验github page的魅力吧!</p>
<p><img src="http://blog.zhinian.info/imgs/github_imgs/github_img_5_s.jpg" alt="Github_img_5"></p>
<p>点击 <code>create new file</code> ,  进入后,  <strong>注意创建的文件的名字! 注意创建的文件的名字! 注意创建的文件的名字!</strong> 内容你可以仿照我的敲一下, 也可以把你自己写过的静态单个html文件的内容复制粘贴过来.  <code>PS: 单个html的意思是指你页面中的js啊,css啊,都在一个.html里面, 这样网页才完整. 不然就有些样式和脚本就不会出现啦~.</code> </p>
<p><img src="http://blog.zhinian.info/imgs/github_imgs/github_img_6_s.jpg" alt="Github_img_6"></p>
<p>ok后,  在页面的最下方, 除了点击那个绿色的按钮 <code>commit new file</code> 其他什么都不要点, 不用填,  就可以了.</p>
<p>好了, 现在深呼吸一下(好累的), 在浏览器里打开一个新的标签页. 输入地址: <a href="https://你的用户名.github.io" target="_blank" rel="external">https://你的用户名.github.io</a> 回车后, 见证你自己的奇迹吧~</p>
<p>如果有人真的很相信我,  就在地址栏输入<code>https://你的用户名.github.io</code> ,  那我是冷漠呢还是高兴呢.   好难选诶</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;须知: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本文图片较多, 所以我用了&lt;a href=&quot;https://isux.tencent.com/introduction-of-webp.html&quot;&gt;webp格式&lt;/a&gt;的图来加载, 以防止出现网速不好者, 要等待一会~ 还有就是图片作用就是让你确认你的界面应该是怎么样的.  我也有文字说明的. &lt;/li&gt;
&lt;li&gt;(新加)   难过,  移动端暂时不支持webp格式的图片,  我在找到解决的方法之前, 还是先用jpg格式的.&lt;/li&gt;
&lt;li&gt;本文是从小白开始的教程, 大牛勿喷. 再说. 这是我第一次写, 难免过于幼稚.  体谅哈~&lt;/li&gt;
&lt;li&gt;左侧有目录, 可以跳转查看.  &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;认识Github和Github-Page&quot;&gt;&lt;a href=&quot;#认识Github和Github-Page&quot; class=&quot;headerlink&quot; title=&quot;认识Github和Github Page&quot;&gt;&lt;/a&gt;认识Github和Github Page&lt;/h1&gt;
    
    </summary>
    
      <category term="教程" scheme="http://blog.zhinian.info/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="github" scheme="http://blog.zhinian.info/tags/github/"/>
    
      <category term="github page" scheme="http://blog.zhinian.info/tags/github-page/"/>
    
  </entry>
  
  <entry>
    <title>Fcc --- Steamroller</title>
    <link href="http://blog.zhinian.info/2016/12/05/steamroller/"/>
    <id>http://blog.zhinian.info/2016/12/05/steamroller/</id>
    <published>2016-12-04T16:07:01.000Z</published>
    <updated>2016-12-16T12:02:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><blockquote>
<p>对嵌套的数组进行<code>扁平化处理</code>。你必须考虑到不同层级的嵌套。如果你被卡住了，</p>
<p>​     记得开大招 <code>Read-Search-Ask</code>。尝试与他人结伴编程、编写你自己的代码。</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>提供的资源: </p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray" target="_blank" rel="external">Array.isArray()</a></p>
</blockquote>
<h1 id="往下继续之前-希望你花两分钟看看这个Fcc-须知"><a href="#往下继续之前-希望你花两分钟看看这个Fcc-须知" class="headerlink" title="往下继续之前, 希望你花两分钟看看这个Fcc 须知"></a>往下继续之前, 希望你花两分钟看看这个<a href="http://blog.zhinian.info/2016/12/04/Fcc/">Fcc 须知</a></h1><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><h2 id="理解题意"><a href="#理解题意" class="headerlink" title="理解题意"></a>理解题意</h2><blockquote>
<p>何为扁平化处理.   </p>
<ul>
<li>如<code>steamroller([[[&quot;a&quot;]], [[&quot;b&quot;]]])</code> 应该返回 <code>[&quot;a&quot;, &quot;b&quot;]</code>  就是把数组中空的值, 嵌套的值等等最终返回一个只有一层的数组.   既完成了Fcc的挑战. </li>
</ul>
</blockquote>
<h2 id="前期思考"><a href="#前期思考" class="headerlink" title="前期思考"></a>前期思考</h2><ol>
<li><code>数组遍历</code>,   需要使用什么方法.  不止一个哦.   除了<code>for循环</code><ul>
<li>检查这个元素,  做判断嘛.</li>
</ul>
</li>
<li><code>数组判断</code>,<ul>
<li>是数组,  要继续扁平化, 可以跳到<code>思考 1</code> 需要用到<code>递归</code>或者另一种多维度数组的处理方法.</li>
<li>不是数组, 添加到结果数组中.   *这里的结果数组需要在函数内定义还是全局定义呢?  见下面同学示例.</li>
</ul>
</li>
<li><code>编写代码</code> ,  想好了, 那就实践吧, 即使出现了bug.<ul>
<li>​</li>
</ul>
</li>
</ol>
<h2 id="代码示范"><a href="#代码示范" class="headerlink" title="代码示范"></a>代码示范</h2><h4 id="一个同学的代码示例"><a href="#一个同学的代码示例" class="headerlink" title="一个同学的代码示例"></a>一个同学的代码示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> newArr = [];     <span class="comment">//定义全局结果数组</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">steamroller</span>(<span class="params">arr</span>)</span>&#123;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;	<span class="comment">// 循环遍历`当前传入数组`元素   注意是当前传入数组袄</span></div><div class="line">  	<span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(arr[i]))   <span class="comment">// 如果是元素是数组而不是值,  那就条件为真</span></div><div class="line">      steamroller(arr[i]);   <span class="comment">// 这里用了递归的方法 循环调用</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">      newArr.push(arr[i]);  <span class="comment">//不是数组, 就push到结果数组里</span></div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> newArr;</div><div class="line">&#125;</div><div class="line">steamroller([<span class="number">1</span>, [<span class="number">2</span>], [<span class="number">3</span>, [[[<span class="number">4</span>]]]]]);</div></pre></td></tr></table></figure>
<p>返回结果是</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[1,2,3,4]</div></pre></td></tr></table></figure>
<p>但并没有通过这道题.   为什么呢?</p>
<p>在题中调用两次steamroller后, </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">steamroller([<span class="number">1</span>, [<span class="number">2</span>], [<span class="number">3</span>, [[[<span class="number">4</span>]]]]]);</div><div class="line">steamroller([[[<span class="string">"a"</span>]], [[<span class="string">"b"</span>]]]);</div></pre></td></tr></table></figure>
<p>结果却不是我们想要的 <code>[&quot;a&quot;, &quot;b&quot;]</code> 而是<code>[1,2,3,4,&quot;a&quot;, &quot;b&quot;]</code>    为什么会把上一次调用的结果也push到了 结果数组中了?</p>
<h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><p>原因就是,    在上面那个同学的代码中,  他的结果数组: <code>newArr</code>是在<code>全局定义</code>的!   这也就导致,  他的结果数组保存着所有的调用steamroller函数的值.   所以这样当然不会通过测试啦~</p>
<p>那机智如你会想到把结果数组<code>定义到函数内</code>, 但是当我们要扁平化的是<code>多维数组</code>时, 它就出现了只有<code>第一个元素</code>的尴尬现象.</p>
<p>What the hall???</p>
<p>so, 这个时候, 你可以了解  javascript的<a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="external">闭包函数</a>了,  同学们点击左侧链接, 跳转, 查看什么是<code>闭包及其原理和应用</code>.</p>
<p>一定去看袄. </p>
<p>以及,  这一题我也用了闭包, 在看完阮一峰老师的闭包讲解后, 可以先尝试着修改代码.    也可以查看我的, 分析示例. 我有写注释.    据说代码写注释是一个好习惯,   请问这个据说对不对  &gt;.&lt;  ~~~</p>
<h4 id="我的代码示例"><a href="#我的代码示例" class="headerlink" title="我的代码示例"></a>我的代码示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">steamroller</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="comment">// I'm a steamroller, baby</span></div><div class="line">  <span class="keyword">var</span> result = [];    <span class="comment">//定义结果数组</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">steam</span>(<span class="params">ifArr</span>) </span>&#123;   <span class="comment">// 定义内部函数.  </span></div><div class="line">    <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(ifArr))&#123; </div><div class="line">      <span class="keyword">return</span> ifArr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;   <span class="comment">//我这里用了forEach 循环数组, 想知道它的详情, 下面有链接.</span></div><div class="line">        <span class="keyword">return</span> steam(val);			<span class="comment">// 递归调用 steam函数. </span></div><div class="line">      &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    	result.push(ifArr);</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  steam(arr);   <span class="comment">//调用函数, </span></div><div class="line">  </div><div class="line">  <span class="keyword">return</span> result; <span class="comment">// 返回结果数组</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">steamroller([<span class="number">1</span>, [<span class="number">2</span>], [<span class="number">3</span>, [[[<span class="number">4</span>]]]]]);</div><div class="line">steamroller([[[<span class="string">"a"</span>]], [[<span class="string">"b"</span>]]]);</div></pre></td></tr></table></figure>
<p>这样, 就算我在代码中调用了两次steamroller函数.  还是只有最后一次调用的结果.  </p>
<p>这就是闭包的魅力</p>
<h2 id="资源汇总"><a href="#资源汇总" class="headerlink" title="资源汇总"></a>资源汇总</h2><p> 题目提供的判断是否为数组的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray" target="_blank" rel="external">Array.isArray()</a></p>
<p>代码中涉及到的 递归   <a href="http://www.ruanyifeng.com/blog/2015/04/tail-call.html" target="_blank" rel="external">递归</a>        PS: 这里还对递归的缺点进行了讲解, 优化.</p>
<p>代码中涉及到的 闭包  <a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="external">闭包函数</a>  o_o</p>
<p>原题中文版链接 <a href="https://www.freecodecamp.cn/challenges/steamroller" target="_blank" rel="external">https://www.freecodecamp.cn/challenges/steamroller</a></p>
<p>原题英文版链接 <a href="https://www.freecodecamp.com/challenges/steamroller" target="_blank" rel="external">https://www.freecodecamp.com/challenges/steamroller</a> </p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><img src="http://blog.zhinian.info/imgs/Fcc/pass.jpg" alt="Pass"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;对嵌套的数组进行&lt;code&gt;扁平化处理&lt;/code&gt;。你必须考虑到不同层级的嵌套。如果你被卡住了，&lt;/p&gt;
&lt;p&gt;​     记得开大招 &lt;code&gt;Read-Search-Ask&lt;/code&gt;。尝试与他人结伴编程、编写你自己的代码。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Fcc" scheme="http://blog.zhinian.info/categories/Fcc/"/>
    
    
      <category term="Fcc 闯关" scheme="http://blog.zhinian.info/tags/Fcc-%E9%97%AF%E5%85%B3/"/>
    
  </entry>
  
</feed>
