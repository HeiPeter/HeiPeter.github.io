<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhinian_Blog</title>
  <subtitle>初行翼翼, 欲展翅飞翔</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.zhinian.info/"/>
  <updated>2017-05-05T15:02:36.000Z</updated>
  <id>http://blog.zhinian.info/</id>
  
  <author>
    <name>鹏程</name>
    <email>1185367347@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>360浏览器、QQ浏览器等 &lt;meta&gt;标签选择webkit内核问题</title>
    <link href="http://blog.zhinian.info/2017/05/05/browerMETA/"/>
    <id>http://blog.zhinian.info/2017/05/05/browerMETA/</id>
    <published>2017-05-05T10:47:16.000Z</published>
    <updated>2017-05-05T15:02:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="忽略IE吧-8-！"><a href="#忽略IE吧-8-！" class="headerlink" title="忽略IE吧(8)！"></a>忽略IE吧(8)！</h1><p>先上一张图，很有趣。</p>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/4422141-4bd7629fb523b9ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="哈哈哈哈   标配"></p>
<h1 id="但是leader并不会让你这样做"><a href="#但是leader并不会让你这样做" class="headerlink" title="但是leader并不会让你这样做"></a>但是leader并不会让你这样做</h1><blockquote>
<p>于是乎你和leader促膝长谈一晚上，得到了这样一个结果：<code>那用户打开360浏览器、QQ浏览器等国内双核的浏览器商，就要正常显示</code></p>
</blockquote>
<p>谷歌一下，呀这个好办。一搜索，两大把。。<br>如图<br><img src="http://upload-images.jianshu.io/upload_images/4422141-4b804c8db9517c5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="360浏览器 meta"></p>
<p>兴致勃勃的打开几个页面，看看资料。哦好简单啊，就是添加一个meta标签就可以了。<br>于是在head里面，眼疾手快的加了一行<br><code>&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</code><br>保存，刷新。<br>似乎没有用。  冷漠。。<br>又看到一篇文章，是这样说：<br><code>&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot; /&gt;</code><br>ok，我再改。。<br>然并卵。。</p>
<h1 id="下面听好了，坑在这里"><a href="#下面听好了，坑在这里" class="headerlink" title="下面听好了，坑在这里"></a>下面听好了，坑在这里</h1><blockquote>
<p>meta标签并不支持 以 ip地址访问 的查询修改内核使用。    来自360社区的产品答疑师回复。。。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4422141-1c6ac96fca2307f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="产品答疑师"></p>
<h1 id="最后，如果你是和我一样的情况"><a href="#最后，如果你是和我一样的情况" class="headerlink" title="最后，如果你是和我一样的情况"></a>最后，如果你是和我一样的情况</h1><blockquote>
<ul>
<li>使用Mac做开发，</li>
<li>不需要兼容ie8，但又需要顾及到国内非chrome浏览器用户</li>
<li>需要在上线前进行测试啊测试</li>
</ul>
</blockquote>
<p>那么可以选择的方法有一个是：<br>使用meta标签。<br>使用局域网，用Windows电脑上的非chrome浏览器做测试。</p>
<blockquote>
<p>这里使用局域网，就是拿到你Mac的ip地址，在Windows上，修改hosts，将ip地址重定向为一个域名。再在浏览器里打开。因为meta标签不支持 以ip地址访问 的查询修改内核使用嘛。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;忽略IE吧-8-！&quot;&gt;&lt;a href=&quot;#忽略IE吧-8-！&quot; class=&quot;headerlink&quot; title=&quot;忽略IE吧(8)！&quot;&gt;&lt;/a&gt;忽略IE吧(8)！&lt;/h1&gt;&lt;p&gt;先上一张图，很有趣。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://blog.zhinian.info/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Brower" scheme="http://blog.zhinian.info/tags/Brower/"/>
    
      <category term="HTML5标签" scheme="http://blog.zhinian.info/tags/HTML5%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>MyWebRoad</title>
    <link href="http://blog.zhinian.info/2017/03/16/MyWebroad/"/>
    <id>http://blog.zhinian.info/2017/03/16/MyWebroad/</id>
    <published>2017-03-16T15:50:04.000Z</published>
    <updated>2017-03-17T03:40:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的前端之路-前望后顾"><a href="#我的前端之路-前望后顾" class="headerlink" title="我的前端之路 - - - 前望后顾"></a>我的前端之路 - - - <span style="color:#a6e859">前望后顾</span></h1><blockquote>
<p>你一定要努力   但不要着急到慌张</p>
</blockquote>
<p>这段时间的面试, 有几次会遇到一个值得思考的问题.<br><a id="more"></a></p>
<h3 id="你为什么想学前端的"><a href="#你为什么想学前端的" class="headerlink" title="你为什么想学前端的?"></a><em><span style="color:#ffc107">你为什么想学前端的?</span></em></h3><p>我是怎么想着学习前端的呢？<br>好玩<br>现在是不是这样，我不能准确的表达，但我可以肯定的有：<code>开始是因为很好玩</code>和 <code>现在觉得它很精彩</code></p>
<h3 id="后顾"><a href="#后顾" class="headerlink" title="后顾"></a>后顾</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;我的前端之路-前望后顾&quot;&gt;&lt;a href=&quot;#我的前端之路-前望后顾&quot; class=&quot;headerlink&quot; title=&quot;我的前端之路 - - - 前望后顾&quot;&gt;&lt;/a&gt;我的前端之路 - - - &lt;span style=&quot;color:#a6e859&quot;&gt;前望后顾&lt;/span&gt;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;你一定要努力   但不要着急到慌张&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这段时间的面试, 有几次会遇到一个值得思考的问题.&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://blog.zhinian.info/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Web" scheme="http://blog.zhinian.info/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>phantomjs———刷IFE琐记</title>
    <link href="http://blog.zhinian.info/2017/03/04/ife-phantomjs/"/>
    <id>http://blog.zhinian.info/2017/03/04/ife-phantomjs/</id>
    <published>2017-03-04T07:32:07.000Z</published>
    <updated>2017-03-04T14:34:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂"><a href="#今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂" class="headerlink" title="今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂"></a>今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂</h1><blockquote>
<p>排着队，一个一个来🙈</p>
</blockquote>
<h3 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h3><a id="more"></a>
<p><a href="http://phantomjs.org/download.html" target="_blank" rel="external">http://phantomjs.org/download.html</a> 常见的系统都有压缩包.</p>
<p>下载后解压, 有bin、examples、等等文件，其中在bin中打开phantomjs后 各个系统进入的界面大同小异: </p>
<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows:"></a>Windows:</h3><ol>
<li>会有带这个<code>phantomjs&gt;</code> 的命令行, 可以输入语句, enter执行, 但是这样不能执行js文件.   </li>
<li>同时在cmd里面,  输入 phantoms –version  会报错.</li>
<li>解决方法:  <strong>修改环境变量</strong><ol>
<li>将压缩包解压到某个盘,  如我解压到D盘, 重命名文件夹为phantomjs,  </li>
<li>打开&gt;我的电脑&gt;右键属性&gt;高级系统设置&gt;高级&gt;环境变量,  在出现的窗口里,  找到系统变量中的 Path, 点击编辑, 在弹出的页面, 点击编辑文本, 把上一步的路径添加上去.  格式:  <code>;D:\phantomjs\bin</code>  切记不要漏下  <strong>;</strong>   这个是各个环境变量的分隔符, 当然, 你编辑的时候发现前面有,那就不用加了. </li>
</ol>
</li>
<li>现在已经ok了   <code>开始键</code> + <code>R</code> 输入cmd 打开命令提示符, 输入phantomjs –version就可以显示版本号了.  输入phantoms  (js文件, 不在命令提示符同一目录下, 需要加js文件的路径) 就可以执行js文件了. </li>
</ol>
<blockquote>
<p>温馨小提示: </p>
<p>在文件管理器的地址栏,  输入cmd  然后回车, 就可以快速的进入当前目录的命令提示符.</p>
</blockquote>
<h3 id="Mac-OS-X"><a href="#Mac-OS-X" class="headerlink" title="Mac OS X:"></a>Mac OS X:</h3><ol>
<li>报错信息同Windows</li>
<li>解决方法:   <strong>使用绝对路径</strong> 和 <strong>修改环境变量</strong><ol>
<li>将压缩包解压到某个文件夹下面.  重命名文件夹为 phantomjs</li>
<li><strong>方法一:</strong>  在终端cd到这个文件目录下.  此时可以输入命令:  <code>bin/phantomjs  examples/hello.js</code>    回车, 就能看到 输出的hello world 了.     输入<code>bin/phantomjs --version</code>  可以查看版本,    这个方法简单, 且不用修改什么  </li>
<li><strong>方法二:</strong> 在终端里设置PATH   一劳永逸.  命令:  <code>export PATH = &quot;$PATH:/Users/username/phantomjs/bin&quot;</code> 其中, 在/User/后, 就是你phantomjs解压后所在的文件夹了.   如我就是 <code>export PATH = &quot;$PATH:/Users/pengchengnie/work/phantomjs/bin&quot;</code>   修改环境变量以后, 在用户下次登陆时生效.    </li>
<li>方法二参考链接及深入学习链接: <a href="http://www.2cto.com/os/201308/237281.html" target="_blank" rel="external">http://www.2cto.com/os/201308/237281.html</a></li>
</ol>
</li>
</ol>
<h3 id="到这里-环境变量已经搭好了-可以开始学习😂"><a href="#到这里-环境变量已经搭好了-可以开始学习😂" class="headerlink" title="到这里, 环境变量已经搭好了, 可以开始学习😂"></a>到这里, 环境变量已经搭好了, 可以开始学习😂</h3><p>欢迎关注我的百度IFE 2017 题库.   链接在这里👉  <a href="https://github.com/PeterGooo/ife" target="_blank" rel="external">GitHub-ife</a>  求star</p>
<p>over</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂&quot;&gt;&lt;a href=&quot;#今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂&quot; class=&quot;headerlink&quot; title=&quot;今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂&quot;&gt;&lt;/a&gt;今天在看百度ife糯米学院的题，遇到了一个问题，解决后就想拿来写写😂&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;排着队，一个一个来🙈&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;下载压缩包&quot;&gt;&lt;a href=&quot;#下载压缩包&quot; class=&quot;headerlink&quot; title=&quot;下载压缩包&quot;&gt;&lt;/a&gt;下载压缩包&lt;/h3&gt;
    
    </summary>
    
      <category term="教程" scheme="http://blog.zhinian.info/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Phantomjs" scheme="http://blog.zhinian.info/tags/Phantomjs/"/>
    
      <category term="ife" scheme="http://blog.zhinian.info/tags/ife/"/>
    
  </entry>
  
  <entry>
    <title>css3 一些样式</title>
    <link href="http://blog.zhinian.info/2016/12/19/css01/"/>
    <id>http://blog.zhinian.info/2016/12/19/css01/</id>
    <published>2016-12-19T05:52:14.000Z</published>
    <updated>2016-12-19T10:15:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>这篇博客出现的css样式,  及其顺序,  和 我的这个静态页面是同步的.   <a href="http://www.zhinian.info/demo/learn/12-19/index.html" target="_blank" rel="external">在这里, 请点击,对应样式查看</a></p>
</blockquote>
<h1 id="几个有趣的样式"><a href="#几个有趣的样式" class="headerlink" title="几个有趣的样式"></a>几个有趣的样式</h1><h2 id="模糊"><a href="#模糊" class="headerlink" title="模糊"></a>模糊</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span>&#123;</div><div class="line">  <span class="attribute">color</span>: transparent;</div><div class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="图片变黑白"><a href="#图片变黑白" class="headerlink" title="图片变黑白"></a>图片变黑白</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">img&#123;</div><div class="line">  filter:grayscale(100%);</div><div class="line">  //浏览器的兼容性问题</div><div class="line">  -webkit-filter: grayscale(100%);  </div><div class="line">  -moz-filter: grayscale(100%);</div><div class="line">  -ms-filter: grayscale(100%);</div><div class="line">  -o-filter: grayscale(100%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="calc-的使用"><a href="#calc-的使用" class="headerlink" title="calc()的使用"></a>calc()的使用</h2><p>calc()用法类似 函数,  能够给元素设置动态的值.  比如  width: calc(100% - 100px);</p>
<p><strong><em>PS</em></strong> 如果用 +   -  操作符,  要记得以空格分开, 不然不起作用.我是被坑过的.  但 * / 就不用, 不过, 我们还是保持着用calc的时候, 都用空格符分隔吧</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.calc</span>&#123;</div><div class="line">  	<span class="attribute">width</span>:<span class="number">200px</span>;	<span class="attribute">height</span>:<span class="number">300px</span>;</div><div class="line"> <span class="attribute">border</span>:<span class="number">1px</span> solid red;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.calc</span> <span class="selector-class">.b</span>&#123;</div><div class="line">  	<span class="attribute">height</span>:<span class="number">100px</span>;	<span class="attribute">background-color</span>: orange;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.calc</span> <span class="selector-class">.c</span>&#123;</div><div class="line">  	<span class="attribute">height</span>: <span class="built_in">calc</span>(100% - 100px);  	<span class="attribute">background-color</span>: green;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h2 id="用css的-border-画三角"><a href="#用css的-border-画三角" class="headerlink" title="用css的 border 画三角"></a>用css的 border 画三角</h2><p> 利用border,  四个边框,  设置边框的宽度,  然后三个 是透明,      css代码</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.triangle</span>&#123;</div><div class="line">  	<span class="attribute">width</span>: <span class="number">0</span>;</div><div class="line">  	<span class="attribute">height</span>: <span class="number">0</span>;</div><div class="line">  	<span class="attribute">border-width</span>: <span class="number">40px</span>;</div><div class="line">  	<span class="attribute">border-style</span>: solid;</div><div class="line">  	<span class="attribute">border-color</span>: transparent transparent red transparent;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h1 id="渐变-径向和线性"><a href="#渐变-径向和线性" class="headerlink" title="渐变  径向和线性"></a>渐变  径向和线性</h1><p>html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"grandient"</span>&gt;</span></div><div class="line"> 文字线性渐变  </div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<p>css代码</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.grandient</span>&#123;</div><div class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-gradient</span>(linear, 0 0 ,0 bottom, from(rgba(0,128,0,1)), <span class="built_in">to</span>(rgba(51,51,51,0.6)));</div><div class="line">  <span class="attribute">-webkit-background-clip</span>:text;</div><div class="line">  <span class="attribute">-webkit-text-fill-color</span>:transparent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一个空div的径向渐变   等间距色标     css代码     </p>
<blockquote>
<p>以下的css代码均只改变了background部分,   有几个是改了宽高, 所以就只写了background部分的变化</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">  <span class="attribute">width</span>:<span class="number">100px</span>; <span class="attribute">height</span>:<span class="number">100px</span>;</div><div class="line">  <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(red, yellow, rhba(30, 144, 255, 0.6));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>指定间距色标  css 代码</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">red</span> 5%, <span class="selector-tag">yellow</span> 25%, <span class="selector-id">#1E90FF</span> 50%);</div></pre></td></tr></table></figure>
<p><strong>大小</strong> 是径向渐变和线性渐变不一样的地方. 你可以用一个尺寸值来指定定义圆形或者椭圆形的大小的点.      css代码</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">ellipse</span> <span class="selector-tag">closest-side</span>, <span class="selector-tag">red</span>, <span class="selector-tag">yellow</span> 10%, <span class="selector-id">#1E90FF</span> 50%, <span class="selector-tag">white</span>);</div></pre></td></tr></table></figure>
<p>其中 它的大小也可以换成 <strong>farthest-corner</strong> 渐变的尺寸为起始点到封闭盒模型最远端的起始点的距离。</p>
<h2 id="重复的渐变"><a href="#重复的渐变" class="headerlink" title="重复的渐变"></a>重复的渐变</h2><p><strong>linear-grandient</strong> 和 <strong>radial-grandient</strong> 不支持自动重复的色标,  然而,  <code>repeating-linear-grandient</code> 和 <code>repeating-radial-grandient</code> 可以实现这个功能. </p>
<p>重复的线性渐变    css 代码</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">repeating-linear-gradient</span>(<span class="selector-tag">-45deg</span>, <span class="selector-tag">red</span>, <span class="selector-tag">red</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">white</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">white</span> 10<span class="selector-tag">px</span>);</div></pre></td></tr></table></figure>
<p>重复的径向渐变    css 代码</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">repeating-radial-gradient</span>(<span class="selector-tag">black</span>, <span class="selector-tag">black</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">white</span> 5<span class="selector-tag">px</span>, <span class="selector-tag">white</span> 10<span class="selector-tag">px</span>);</div></pre></td></tr></table></figure>
<p> 可扩展的查看 菜鸟教程: <a href="http://www.runoob.com/css3/css3-gradients.html" target="_blank" rel="external">http://www.runoob.com/css3/css3-gradients.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇博客出现的css样式,  及其顺序,  和 我的这个静态页面是同步的.   &lt;a href=&quot;http://www.zhinian.info/demo/learn/12-19/index.html&quot;&gt;在这里, 请点击,对应样式查看&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;几个有趣的样式&quot;&gt;&lt;a href=&quot;#几个有趣的样式&quot; class=&quot;headerlink&quot; title=&quot;几个有趣的样式&quot;&gt;&lt;/a&gt;几个有趣的样式&lt;/h1&gt;&lt;h2 id=&quot;模糊&quot;&gt;&lt;a href=&quot;#模糊&quot; class=&quot;headerlink&quot; title=&quot;模糊&quot;&gt;&lt;/a&gt;模糊&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: transparent;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端" scheme="http://blog.zhinian.info/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS" scheme="http://blog.zhinian.info/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Github 的注册与使用教程以及github page (二)</title>
    <link href="http://blog.zhinian.info/2016/12/18/Github_2/"/>
    <id>http://blog.zhinian.info/2016/12/18/Github_2/</id>
    <published>2016-12-18T14:47:16.000Z</published>
    <updated>2016-12-19T05:23:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Github来托管你的代码"><a href="#使用Github来托管你的代码" class="headerlink" title="使用Github来托管你的代码"></a>使用Github来托管你的代码</h1><p><strong><em>须知</em></strong> </p>
<blockquote>
<ol>
<li><strong><code>写在前面的话:</code></strong>         如果你自认为是做技术的,  我强烈推荐你  <strong>学会翻墙</strong>,  好处不用多说,  讲道理某度搜索真的会误人! ! ! </li>
<li><strong><code>关于使用客户端还是命令行</code></strong>     两个都可以上传你的代码,  就是看你喜欢哪种风格了.   </li>
<li><strong><code>善于使用左侧目录跳转</code></strong>     这篇文章比较长, 我把客户端和命令行放在一起了.   所以请读者合理使用左侧目录跳转, 以节省时间. </li>
<li>本文是从小白开始的教程, 大牛勿喷. 再说. 这是我第一次写, 难免过于幼稚.  体谅哈~</li>
</ol>
</blockquote>
<a id="more"></a>
<p><strong><em>相关</em></strong>  </p>
<blockquote>
<p><strong>第一部分</strong> <a href="http://blog.zhinian.info/2016/12/08/Github-1/">认识Github和Github Page</a></p>
<p>  在第一部分中,  我简单的写了Github的注册, 建仓库,  初次使用Github page. 还是用的网页上的<strong>create new file</strong> 在实际生产中, 我们肯定不可能是那样的写文件吧, 所以. 这个博文就是教你如何上传代码文件的</p>
<p><strong>第二部分</strong> <a href="http://blog.zhinian.info/2016/12/08/Github-2/">使用客户端或命令行上传你的代码</a></p>
<p>​      本文讲述了如何上传 本地的代码 到 Github上.  常见的方式有 <strong><code>客户端</code></strong> 和 <strong><code>终端命令行</code></strong>  这两种. 我在这里用文字加图片的方法, 讲述一下Github的上传代码的事情. </p>
</blockquote>
<h1 id="Github-的客户端使用"><a href="#Github-的客户端使用" class="headerlink" title="Github 的客户端使用"></a>Github 的客户端使用</h1><p>  当今盛行的代码托管服务平台.  而我们作为一个程序员, 岂有弃之不用之理~  好绕哈哈.    下面我就直接进入主题  客户端的使用.  分别有Mac端 和 windows端 的使用.</p>
<blockquote>
<p>客户端是简单的操作, 适合新手. </p>
</blockquote>
<h2 id="Mac客户端下载与使用"><a href="#Mac客户端下载与使用" class="headerlink" title="Mac客户端下载与使用"></a>Mac客户端下载与使用</h2><h3 id="1-下载与安装"><a href="#1-下载与安装" class="headerlink" title="1. 下载与安装"></a>1. 下载与安装</h3><ul>
<li>官网下载地址: <a href="https://desktop.github.com/" target="_blank" rel="external">https://desktop.github.com/</a></li>
<li>如果网速慢, 可以在我的网盘下载. 链接: <a href="http://pan.baidu.com/s/1i4B4tzZ" target="_blank" rel="external">http://pan.baidu.com/s/1i4B4tzZ</a> 密码: gjpy</li>
</ul>
<h3 id="2-登录客户端"><a href="#2-登录客户端" class="headerlink" title="2. 登录客户端"></a>2. 登录客户端</h3><ul>
<li>快捷键 <code>command</code> + <code>,</code> 打开客户端的设置.  </li>
<li>点击 <strong>Accounts</strong>  然后  sign in 你的Github账号.</li>
</ul>
<h3 id="3-克隆仓库"><a href="#3-克隆仓库" class="headerlink" title="3. 克隆仓库"></a>3. 克隆仓库</h3><ul>
<li>登陆成功后, 在客户端的左上角点击 <strong><em>+</em></strong>  图标, 在弹出来的框框中,  有三个选项: Add  Create  Clone,  这里我们需要点击Clone. </li>
<li>这时会出来你Github账号上,  所有的仓库.  你需要clone哪个, 就点击仓库名字, 右下角的按钮就亮了.   click it</li>
<li>弹出clone选项, 你选择好文件夹就可以了.</li>
</ul>
<h3 id="4-写代码咯"><a href="#4-写代码咯" class="headerlink" title="4. 写代码咯"></a>4. 写代码咯</h3><p>  你想托管在Github平台的代码放在你克隆到本地的仓库下面就好了,  然后接着下一步, push你的代码吧.</p>
<blockquote>
<p>这里上面的几个步骤,  是你第一次使用Github提交代码的顺序,  在接下来的时间里,  在你已经克隆过本地仓库后, 你要是需要提交代码到Github上,  那直接走 <a href="#5-提交代码到Github上">提交代码到Github上</a> 这一步就好了</p>
</blockquote>
<h3 id="5-提交代码到Github上"><a href="#5-提交代码到Github上" class="headerlink" title="5. 提交代码到Github上"></a>5. 提交代码到Github上</h3><ol>
<li><p>打开客户端.  点击左侧你要同步的仓库</p>
</li>
<li><p>当你本地的代码与网页上的相比, 有变动的时候, 会显示有多少个 changes . </p>
</li>
<li><p>在changes下,  在你的头像旁边, 有一个输入框, summary(描述)  输入你为这一次提交的说明.       </p>
<ul>
<li>这个是必须的</li>
<li>你的说明, 如果出现空格,  请用 <strong>“”</strong> 把说明包含起来</li>
</ul>
<p>​</p>
</li>
<li><p>输入完上述的summary后,  下面的 <code>Commit to master</code> 就可以点击了     click it</p>
</li>
<li><p>这时候你已经完成了90%了,  最后一步就是点击右上角黑色框中的  Sync  . 等待上传成功吧.</p>
</li>
<li><p>去Github官网上,  登录你的账号, 查看你刚刚提交的代码吧.  啊哈~ </p>
</li>
</ol>
<h3 id="6-常见问题"><a href="#6-常见问题" class="headerlink" title="6. 常见问题"></a>6. 常见问题</h3><p>  收集中….</p>
<h2 id="Windows客户端下载与使用"><a href="#Windows客户端下载与使用" class="headerlink" title="Windows客户端下载与使用"></a>Windows客户端下载与使用</h2><h3 id="1-下载与安装-1"><a href="#1-下载与安装-1" class="headerlink" title="1. 下载与安装"></a>1. 下载与安装</h3><ul>
<li>官网下载地址: <a href="https://desktop.github.com/" target="_blank" rel="external">https://desktop.github.com/</a></li>
<li>如果网速慢, 可以在我的网盘下载.  链接: </li>
</ul>
<h3 id="2-登录客户端-1"><a href="#2-登录客户端-1" class="headerlink" title="2. 登录客户端"></a>2. 登录客户端</h3><h3 id="3-克隆仓库-1"><a href="#3-克隆仓库-1" class="headerlink" title="3. 克隆仓库"></a>3. 克隆仓库</h3><h3 id="4-写代码咯-1"><a href="#4-写代码咯-1" class="headerlink" title="4. 写代码咯"></a>4. 写代码咯</h3><h3 id="5-提交代码到Github上-1"><a href="#5-提交代码到Github上-1" class="headerlink" title="5. 提交代码到Github上"></a>5. 提交代码到Github上</h3><h3 id="6-常见问题-1"><a href="#6-常见问题-1" class="headerlink" title="6. 常见问题"></a>6. 常见问题</h3><h1 id="命令行的使用-Git"><a href="#命令行的使用-Git" class="headerlink" title="命令行的使用  Git"></a>命令行的使用  Git</h1><blockquote>
<p>命令行是轻松方便的一个方法,  它舍去了鼠标的点来点去, 舍去了UI界面,  用最简单的一行行命令轻松完成clone  commit  push 等等, 将你的代码从本地托管到Github上</p>
</blockquote>
<h2 id="Mac下的git命令行"><a href="#Mac下的git命令行" class="headerlink" title="Mac下的git命令行"></a>Mac下的git命令行</h2><h3 id="1-终端的介绍与使用"><a href="#1-终端的介绍与使用" class="headerlink" title="1. 终端的介绍与使用"></a>1. 终端的介绍与使用</h3><ol>
<li><strong>终端是什么?</strong><ul>
<li>是以<code>执行命令的方式</code><strong>来完成</strong><code>一些操作</code>的工具,  比如查看某个文件夹下的文件, 你可以在GUI界面, 打开Finder查看对应的文件.   也可以在终端里通过 cd  ls 等命令查看文件. </li>
<li>详情请自行谷歌<a href="https://www.google.com/" target="_blank" rel="external">https://www.google.com/</a> 或者 必应<a href="http://cn.bing.com/" target="_blank" rel="external">http://cn.bing.com/</a></li>
<li><strong>PS:</strong> 如果你自认为是做技术的,  我强烈推荐你  <strong>学会翻墙</strong>  好处不用多说,  讲道理某度搜索真的会误人! ! ! </li>
</ul>
</li>
<li><strong>Mac 系统下终端在哪里? 还需要下载吗?</strong><ul>
<li>Mac系统下,  已经有终端软件 Terminal , 可以在Spotlight 中, 输入 Terminal查找,   然后打开.  也可以在Launchpad中,  有个实用工具程序文件夹, 终端就在里面, 点击打开就好了. </li>
<li>Mac系统自带的有Terminal,  我觉得它的<strong>功能方面</strong>, 不如我现在用的 <code>iTerm</code>  就像是记事本和Sublime之间的区别. - 如有感兴趣的可以谷歌搜索, 了解了解. 这里就不详细讲述了.</li>
</ul>
</li>
<li><strong>终端如何使用?</strong><ul>
<li>打开终端后, 输入命令, 回车执行.  </li>
<li>输入命令时,  如有命令加文件的,   记得要用空格分隔开,   比如 cd work 中间有空格的,  而不是cdwork</li>
</ul>
</li>
<li><strong>终端常用的一些命令</strong><ul>
<li>ls  —— 显示当前路径下的文件  ls -a可以显示隐藏文件. ls -l可以显示文件信息. ls -al 组合两个功能了</li>
<li>cd  —— cd + 文件名   打开文件. 比如 当前路径下有个work文件夹,  我想在终端中打开,  那就是 cd work 回车执行</li>
<li>chmod —— 改变文件权限   这个命令可能会经常用到, 详情 请谷歌吧, 挺长的….   偷个懒</li>
<li>mkdir —— mkdir + 文件名,  这个命令是新建目录,  mkdir work   就是新建了一个work文件夹,  中文名和带空格符的 ,  要用””符号  如  mkdir “learn mkdir”</li>
<li>cp —— 复制文件命令, copy嘛, 使用方法是  cp 参数 源文件 目标文件   示例: 把work下的text.txt文件 cp到home目录下,   cp -R /work/text.txt /home/ 这样就好了  <strong>PS:注意空格,    另外我只是演示, 这个路径要写完整, 从根目录开始.</strong></li>
<li>rm —— 删除文件  remove的缩写咯,    示例:  rm text.txt  删除了text文件. </li>
<li>还有 mv 移动文件  move的缩写.     等等….     命令行的命令太多了, 感兴趣的可以自行搜索…    </li>
</ul>
</li>
</ol>
<h3 id="2-公钥密钥的介绍与生成"><a href="#2-公钥密钥的介绍与生成" class="headerlink" title="2. 公钥密钥的介绍与生成"></a>2. 公钥密钥的介绍与生成</h3><ol>
<li><p><strong>ssh, (Secure Shell)</strong>  </p>
<ul>
<li>是一种  创建在应用层和传输层 基础上的安全协议. </li>
<li>基于<strong>密钥</strong>的安全验证    </li>
<li>Github 支持ssh密钥</li>
</ul>
</li>
<li><p><strong>本地生成ssh</strong></p>
<ol>
<li><p>如果是第一次使用, 那你的本地应该没有一对密钥的.   不过以防万一还是检查一下吧.  </p>
<ul>
<li>打开终端,  输入命令</li>
<li><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/.ssh</div></pre></td></tr></table></figure>
</li>
<li><p>如果返回’…No such file or directory …’  就说明没有创建过密钥.  那就进行下一步 2 , 生成你的密钥.  如果有,  你确定这个rsa是你的Github注册邮箱吗?  确定 那就跳到 <a href="#3-上传公钥到Github">3. 上传公钥到Github</a></p>
</li>
</ul>
</li>
<li><p><strong>生成新的key</strong> </p>
<ul>
<li><p>输入命令   这里 <strong>“”</strong> 内输入的是你Github账号<strong>绑定的邮箱</strong>.    千万要输入正确袄…       其中 在命令中,  github_rsa   是指的  给新建的密钥 <strong>命名</strong> 为github_rsa , 你也可以更改. 我下文都是用的github_rsa, 如果更改, 注意替换袄. </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen <span class="_">-f</span> github_rsa -C <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure>
</li>
<li><p>然后回车两次,  就生成完毕了,        其中第一次回车是问 passphrase , 这个它会在你每次进行版本控制(提交文件)时,  让你输入, 我个人没有使用, 所以就回车了,  第二次是让你输密码, 然后每次提交也要输密码, 所以为了懒, 我也回车了,  当然你觉得有用, 你可以加上. </p>
</li>
<li><code>ls</code> 一下.  会有<code>github_rsa</code> 和 <code>github_rsa.pub</code> 这两个文件,  在下一步中, 我们把公钥上传到github. </li>
</ul>
</li>
</ol>
</li>
</ol>
<h3 id="3-上传公钥到Github"><a href="#3-上传公钥到Github" class="headerlink" title="3. 上传公钥到Github"></a>3. <strong>上传公钥到Github</strong></h3><blockquote>
<p>这时, 你已经有了文件.ssh 以及有了你注册Github账号时, 所用的邮箱生成的 一对密钥了.  </p>
</blockquote>
<ul>
<li>  Mac 有个命令是copy文件到剪贴板.      那我们把上一步生成的公钥复制进去吧  注意命令空格</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pbcopy &lt; ~/.ssh/github_rsa.pub</div></pre></td></tr></table></figure>
<p>OK 输入完回车.      里面的内容已经十分乖巧的复制到剪贴板里面了</p>
<ul>
<li>打开Github <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> 登陆你的账号, </li>
<li>打开这个链接 : <a href="https://github.com/settings/keys" target="_blank" rel="external">https://github.com/settings/keys</a>  </li>
<li>现在打开的页面是设置ssh的.    请点击页面上, 右上角区域的 <strong><code>New SSH key</code></strong> </li>
<li>在出现的两个输入框,  第一个输入你给ssh key 的命名, 比如 <code>github_id</code>    第二个输入框,  选中后, <code>command</code> + <code>v</code>  粘贴你刚刚复制的公钥. </li>
<li>点击 <code>Add SSH key</code> 就完成了这一步. </li>
</ul>
<h3 id="4-检查SSH链接"><a href="#4-检查SSH链接" class="headerlink" title="4. 检查SSH链接"></a>4. <strong>检查SSH链接</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>如果显示 : Are you sure you want continue connecting (yes/no)?    输入yes      没有这个也没事</p>
<p>最终显示:  Hi  yourusername! You’re ………  就ok了 </p>
<p>参考链接: <a href="http://www.jianshu.com/p/0d7038102cd6" target="_blank" rel="external">http://www.jianshu.com/p/0d7038102cd6</a>  详情可点击查看. </p>
<h3 id="5-使用命令上传代码吧"><a href="#5-使用命令上传代码吧" class="headerlink" title="5. 使用命令上传代码吧 !"></a>5. <strong>使用命令上传代码吧 !</strong></h3><blockquote>
<ul>
<li>git status   // 检查状态.   一般用于查看本地仓库有无改动. </li>
<li>git add .   // 更新改动. </li>
<li>git commit -m “first commit”  // 提交更新到暂存区并注释是”first commit”     <strong>PS</strong> 这个-m后面 一定要有<code>&quot;String&quot;</code> 不然会多麻烦的. </li>
<li>git push // 提交到Github</li>
</ul>
</blockquote>
<h3 id="6-常见问题-2"><a href="#6-常见问题-2" class="headerlink" title="6. 常见问题"></a>6. <strong>常见问题</strong></h3><p>  收集中…….</p>
<h2 id="Windows下的git命令行"><a href="#Windows下的git命令行" class="headerlink" title="Windows下的git命令行"></a>Windows下的git命令行</h2><h3 id="1-Git-shell介绍"><a href="#1-Git-shell介绍" class="headerlink" title="1. Git shell介绍"></a>1. <strong>Git shell介绍</strong></h3><h3 id="2-密钥生成"><a href="#2-密钥生成" class="headerlink" title="2. 密钥生成"></a>2. <strong>密钥生成</strong></h3><h3 id="3-上传公钥到Github-1"><a href="#3-上传公钥到Github-1" class="headerlink" title="3. 上传公钥到Github"></a>3. <strong>上传公钥到Github</strong></h3><h3 id="4-检查SSH连接"><a href="#4-检查SSH连接" class="headerlink" title="4. 检查SSH连接"></a>4. <strong>检查SSH连接</strong></h3><h3 id="5-使用命令上传"><a href="#5-使用命令上传" class="headerlink" title="5. 使用命令上传"></a>5. <strong>使用命令上传</strong></h3><h3 id="6-常见问题-3"><a href="#6-常见问题-3" class="headerlink" title="6. 常见问题"></a>6. <strong>常见问题</strong></h3><p>​        </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Github来托管你的代码&quot;&gt;&lt;a href=&quot;#使用Github来托管你的代码&quot; class=&quot;headerlink&quot; title=&quot;使用Github来托管你的代码&quot;&gt;&lt;/a&gt;使用Github来托管你的代码&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;须知&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;写在前面的话:&lt;/code&gt;&lt;/strong&gt;         如果你自认为是做技术的,  我强烈推荐你  &lt;strong&gt;学会翻墙&lt;/strong&gt;,  好处不用多说,  讲道理某度搜索真的会误人! ! ! &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;关于使用客户端还是命令行&lt;/code&gt;&lt;/strong&gt;     两个都可以上传你的代码,  就是看你喜欢哪种风格了.   &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;善于使用左侧目录跳转&lt;/code&gt;&lt;/strong&gt;     这篇文章比较长, 我把客户端和命令行放在一起了.   所以请读者合理使用左侧目录跳转, 以节省时间. &lt;/li&gt;
&lt;li&gt;本文是从小白开始的教程, 大牛勿喷. 再说. 这是我第一次写, 难免过于幼稚.  体谅哈~&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="教程" scheme="http://blog.zhinian.info/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="github" scheme="http://blog.zhinian.info/tags/github/"/>
    
      <category term="github page" scheme="http://blog.zhinian.info/tags/github-page/"/>
    
  </entry>
  
</feed>
